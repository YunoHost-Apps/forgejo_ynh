#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service="$app" --action="stop" --log_path="systemd"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

# Update forgejo login source (1.19.3-0~ynh2)
pushd "$install_dir"
    old_login_source_id=$(ynh_exec_as_app ./forgejo admin auth list | grep "YunoHost LDAP" | grep "via BindDN" | cut -f 1)
    if [ -n "$old_login_source_id" ]; then
        ynh_print_info "Delete obsolete forgejo login source (LDAP via BindDN)"

        # Ensure no user have this obsolete login source
        ynh_psql_db_shell  "$db_name" --sql "update public.user set login_source = 0, login_type = 0 where login_source = ${old_login_source_id}"

        # Delete old login source
        ynh_exec_as_app ./forgejo admin auth delete --id "$old_login_source_id"
    fi

    ynh_exec_as_app ./forgejo admin auth list | grep "YunoHost LDAP" | grep -q "LDAP (simple auth)" ||
        # create new login source if not existing
        set_forgejo_login_source
popd

# Update login source synchronization flag (1.19.3-0~ynh3)
enable_login_source_sync

# forgejo home directory has changed (yunohost packaging v2)
# .ssh directory should move from old home dir (data_dir) to new one
# (/var/www/$app is the default value for home in resources.system_user)
if [ -d "$data_dir/.ssh" ]; then
    mv "$data_dir/.ssh" "/var/www/$app"
fi

# If secret_key doesn't exist, create it
ynh_app_setting_set_default --key=secret_key --value=$("$install_dir/forgejo" generate secret SECRET_KEY)

# If lfs_jwt_secret doesn't exist, create it
ynh_app_setting_set_default --key=lfs_jwt_secret --value=$("$install_dir/forgejo" generate secret JWT_SECRET)

# If internal_token doesn't exist, create it
ynh_app_setting_set_default --key=internal_token --value=$("$install_dir/forgejo" generate secret INTERNAL_TOKEN)

# If oauth2_jwt_secret doesn't exist, create it
ynh_app_setting_set_default --key=oauth2_jwt_secret --value=$("$install_dir/forgejo" generate secret JWT_SECRET)

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

ynh_setup_source --dest_dir="$install_dir" --full_replace --keep="custom .ssh"
xz -f -d "$install_dir/forgejo.xz"

chmod +x "$install_dir/forgejo"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration..."

ssh_port=$(grep -P "Port\s+\d+" /etc/ssh/sshd_config | grep -P -o "\d+")
ynh_config_add --template="app.ini" --destination="$install_dir/custom/conf/app.ini"

chmod 640 "$install_dir/custom/conf/app.ini"
chown "$app:$app" "$install_dir/custom/conf/app.ini"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression "Upgrading systemd configuration..."

ynh_config_add_systemd

ynh_config_add_nginx

ynh_config_add_logrotate  "/var/log/$app"

yunohost service add "$app" --description="Forgejo" --log="/var/log/$app/forgejo.log"

ynh_config_add_fail2ban --logpath "/var/log/$app/forgejo.log" --failregex ".*Failed authentication attempt for .* from <HOST>"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="$app" --action="start" --log_path="/var/log/$app/forgejo.log" --wait_until="Starting new Web server: tcp:127.0.0.1:"

#=================================================
# Synchronize users (backward compatibility 1.19.3-0~ynh3)
#=================================================

if [ -z "${forgejo_api_user:-}" ]; then
    create_forgejo_api_user
fi

set_users_login_source

synchronize_users

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
